# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import item_pb2 as item__pb2


class ItemServiceStub(object):
    """Service to manage list of itemservices
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddNewItem = channel.unary_unary(
                '/proto.ItemService/AddNewItem',
                request_serializer=item__pb2.AddNewItemRequest.SerializeToString,
                response_deserializer=item__pb2.AddNewItemResponse.FromString,
                )
        self.ListAllItems = channel.unary_unary(
                '/proto.ItemService/ListAllItems',
                request_serializer=item__pb2.ListAllItemsRequest.SerializeToString,
                response_deserializer=item__pb2.ListAllItemsResponse.FromString,
                )
        self.ItemPrice = channel.unary_unary(
                '/proto.ItemService/ItemPrice',
                request_serializer=item__pb2.ItemPriceRequest.SerializeToString,
                response_deserializer=item__pb2.ItemPriceResponse.FromString,
                )


class ItemServiceServicer(object):
    """Service to manage list of itemservices
    """

    def AddNewItem(self, request, context):
        """Add new Item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllItems(self, request, context):
        """ListAllItems
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemPrice(self, request, context):
        """ItemPrice
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddNewItem': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewItem,
                    request_deserializer=item__pb2.AddNewItemRequest.FromString,
                    response_serializer=item__pb2.AddNewItemResponse.SerializeToString,
            ),
            'ListAllItems': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllItems,
                    request_deserializer=item__pb2.ListAllItemsRequest.FromString,
                    response_serializer=item__pb2.ListAllItemsResponse.SerializeToString,
            ),
            'ItemPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemPrice,
                    request_deserializer=item__pb2.ItemPriceRequest.FromString,
                    response_serializer=item__pb2.ItemPriceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.ItemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItemService(object):
    """Service to manage list of itemservices
    """

    @staticmethod
    def AddNewItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ItemService/AddNewItem',
            item__pb2.AddNewItemRequest.SerializeToString,
            item__pb2.AddNewItemResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ItemService/ListAllItems',
            item__pb2.ListAllItemsRequest.SerializeToString,
            item__pb2.ListAllItemsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ItemService/ItemPrice',
            item__pb2.ItemPriceRequest.SerializeToString,
            item__pb2.ItemPriceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
